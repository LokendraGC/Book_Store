
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, "public/uploads");
  },
  filename: (req, file, cb) => {
    cb(null, Date.now()) + path.extname(file.originalname);
  },
});

multer({
  storage: storage,
  limits: { fileSize: "50000000" },
  fileFilter: (req, file, cb) => {
    const fileTypes = /jpeg|jpg|png|gif/;
    const extname = fileTypes.test(path.extname(file.originalname));

    if (fileTypes && extname) {
      return cb(null, true);
    } else {
      cb("Give proper files format to upload");
    }
  },
}).single("image");


//bookroute 

import { Router } from "express";
import bookModel from '../models/bookModel.js'
import multer from "multer";

const router = Router();

let imageName;


const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, "public/uploads");
  },
  filename: function (req, file, cb) {
    imageName = Date.now() + "-" + Math.round(Math.random() * 1e9)+"-"+file.originalname.trim();
    cb(null, imageName);
  },
});

const upload = multer({ storage: storage });


// const upload = multer({
//   storage: storage,
//   limits: { fileSize: "50000000" },
//   fileFilter: (req, file, cb) => {
//     const fileTypes = /jpeg|jpg|png|gif/;
//     const extname = fileTypes.test(path.extname(file.originalname));

//     if (fileTypes && extname) {
//       return cb(null, true);
//     } else {
//       cb("Give proper files format to upload");
//     }
//   },
// })


//adding data to dB CREATE
router.post("/add",upload.single("image"),  async(req,res)=>{
      const imageName = req.file;
      const data= await bookModel.create({...req.body,image:imageName})
      console.log(data)
      if(data){
        res.json(data)
      }else{
        res.status(400).json({success:false,message:"Book can not be added"})
    }
})

export default router;
